@import (reference) 'modules/grid';

.hxRow > label.hxChoice {
  #grid.column();
}

// Layout & Geometry
// NOTE: may need moved to core/hx-tile.less
hx-tile {
  &:extend(.hxBox-lg);
  border-radius: 2px;
  display: inline-block;
  height: 100%;
  position: relative;
  text-align: center;
  width: 100%;

  hx-tile-title {
    display: block;
    font-size: 1rem;
    font-weight: 700;
    margin-bottom: 0;
  }

  hx-tile-description {
    display: block;
    font-size: 0.75rem;
  }

  &.hxSm {
    padding: 0.75rem;

    hx-tile-description {
      display: none;
    }
  }

  &.hxLg {
    padding: 1.75rem;
  }

  hx-tile-title + *,
  .hx-tile-icon + * {
    margin-top: 0.5rem;
  }

  // NOTE: can this be simplified at all?
  .hx-tile-icon {
    hx-icon {
      height: 1.75rem;
      width: 1.75rem;
    }
  }

  hx-icon[type="checkmark"] {
    display: none;
    height: 1rem;
    width: 1rem;
  }

  &.hxSubdued {
    opacity: 0.7;

    &:hover {
      opacity: 1;
    }
  }
}//hx-tile

/* ========== COMMON ========== */
label.hxChoice > input {
  position: absolute;
  top: -200px;

  &:checked + hx-tile {
    hx-icon[type="checkmark"] {
      display: block;
      position: absolute;
      right: 1.25rem;
      top: 1.25rem;
    }
  }
}

/* ========== SUBDUED ========== */
label.hxChoice > input:focus + hx-tile.hxSubdued,
label.hxChoice > input + hx-tile:hover.hxSubdued,
label.hxChoice > input[disabled] + hx-tile.hxSubdued,
label.hxChoice > input:checked + hx-tile.hxSubdued,
label.hxChoice > input[invalid] + hx-tile.hxSubdued {
  opacity: 1;
}

/* ========== DEFAULT ========== */
// NOTE: These styles may be able to go into default hx-tile defs
label.hxChoice > input + hx-tile {
  background-color: @gray-0;
  border: solid 1px @gray-400;
  color: @gray-900;

  .hx-tile-icon {
    color: @gray-700;
  }
}
label.hxChoice > input + hx-tile:hover {
  background-color: @cyan-50;
  border-color: @cyan-500;
}
// same as hover, with focus glow
label.hxChoice > input:focus + hx-tile {
  background-color: @cyan-50;
  border-color: @cyan-500;
  box-shadow: @focus-glow;
}


/* ========== CHECKED ========== */
label.hxChoice > input:checked + hx-tile {
  border-color: @cyan-900;
  color: @cyan-900;

  hx-tile-description {
    color: @gray-900;
  }
}
label.hxChoice > input:checked + hx-tile:hover {
  border-color: @cyan-500;
}
// same as hover, with focus glow
label.hxChoice > input:checked:focus + hx-tile {
  border-color: @cyan-500;
  box-shadow: @focus-glow;
}


/* ========== INVALID ========== */
label.hxChoice > input[invalid] + hx-tile {
  border-color: @red-900;
  border-width: 2px;
  color: @red-900;

  hx-tile-description {
    color: @gray-900;
  }

  .hx-tile-icon {
    color: inherit;
  }
}
.tileInvalidHover() {
  background-color: @red-100;
  border-color: @red-900;
  color: @gray-900;
}
label.hxChoice > input[invalid] + hx-tile:hover {
  .tileInvalidHover();
}
label.hxChoice > input[invalid]:focus + hx-tile {
  .tileInvalidHover();
  box-shadow: @focus-glow-invalid;
}


/* ========== DISABLED ========== */
label.hxChoice > input[disabled] + hx-tile,
label.hxChoice > input[disabled] + hx-tile:hover {
  background-color: @gray-25;
  border-color: @gray-300;
  border-width: 1px;
  color: @gray-700;
  cursor: not-allowed;

  hx-tile-description {
    color: inherit;
  }

  hx-icon {
    color: @gray-500;
  }
}

@media (min-width: @grid-break-wrist) {
  .hxRow > label.hxChoice{
    #grid.span(12);
  }
}
@media (min-width: @grid-break-lap) {
  .hxRow > label.hxChoice{
    #grid.span(6);
  }
}
@media (min-width: @grid-break-desk) {
  .hxRow > label.hxChoice{
    #grid.span(4);
  }
}
